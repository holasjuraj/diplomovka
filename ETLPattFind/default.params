### Default parameters ###

# All parameters can be omitted, default value will be used.
# Parameters names and values are case-insensitive.

# Number of threads for comparing tasks. Must be greater than 0.
# Type: integer
# Default = 4
threads: 4

# Method used for determining distance of two files (ETL jobs). Value can be either name or code of
# the method:
# 0 = editDistance
# 1 = Ukkonen
# 2 = cosine
# 3 = Jaccard
# 4 = SorsenDice
# 
# Type: integer or string
# Default = ukkonen
comparing-method: ukkonen

# If you use edit distance for comparing files, you can specify threshold for early stopping of the
# algorithm. The earlier is stops, the faster it is, but provides slightly less accurate result.
# Theoretically it should be greater or equal to clustering-threshold, but it works well even if
# this condition is not met. Value must be at least 0.01 (1% of the algorithm will be executed), and
# at most 1.0 (whole algorithm will be executed).
# Type: float
# Default = 0.05
editdistance-early-stopping: 0.05

# If you are using q-gram -based comparing of files (Ukkonen, cosine, Jaccard, Sorsen-Dice), you can
# specify the size of q-gram, i.e. how many consecutive XML tokens will be "merged" into one logical
# unit.
# Type: integer
# Default = 2
qgram-size: 2

# There are many file comparison tasks, this setting tells how to schedule them. Full-comparison
# scheduler is simple (has lower overhead), but less effective - it simply compares all files to
# all. Tri-Ineq scheduler is more complicated (has higher overhead), but much more effective - it
# utilizes triangular inequality and prunes most of the hard work. Value can be either name or code
# of the scheduler:
# 0 = full-comparison
# 1 = tri-ineq
# 
# Type: integer or string
# Default = full-comparison
scheduler: full-comparison

# If you choose Tri-Ineq scheduler, it replaces some exact file comparisons with bounded estimates,
# i.e. "these two files are 25% - 33% different". Here you can set minimal accepted value for the
# lower bound. Value must be between 0.0001 and 1.0.
# Type: float
# Default = 0.05
scheduler-tri-ineq--lb-minimum: 0.05

# If you choose Tri-Ineq scheduler, it replaces some exact file comparisons with bounded estimates,
# i.e. "these two files are 25% - 33% different". If the range is too narrow (e.g. files are
# 12.0002% - 12.0003% different), it can be considered that the valuse is already exact. Here you
# can set what "too narrow" means. Value must be between 0.0 and 1.0.
# Type: float
# Default = 0.001
scheduler-tri-ineq--min-bound-range: 0.001

# Merging threshold for clustering - two clusters are merged iff distance between them is less or
# equal to this number (min. distance = 0.0, max. distance = 1.0). Roughly speaking, with lower
# value you get more clusters (patterns) with very similar jobs, with higher value you get less
# clusters with less similar jobs. Value must be between 0.0001 and 1.0.
# Type: float
# Default = 0.05
clustering-threshold: 0.05

# Method used for determining distance of two clusters. Value can be either name or code of the
# method:
# 0 = UPGMA
# 1 = CLink
# 2 = SLink
# 
# Type: integer or string
# Default = upgma
clustering-method: upgma

# Show only patterns, that contain at least minPatternSize ETL jobs. All patterns with less jobs
# will be omitted from the result.
# Type: integer
# Default = 2
min-pattern-size: 2